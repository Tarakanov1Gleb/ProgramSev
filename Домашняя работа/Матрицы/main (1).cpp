/*
 j++;
 возвращение summ;
int main()
 постоянная строка ввода = 10;
{
 столбец const int = 10;
 сранд (время (0));
 std::array<std::array<int, строка>, столбец> матрица;
 пока(мне<10){
 если(матрица[i][j]<0)
 сумма+= матрица[i][j];
 я++;
 j++;
    }
 возвращение summ;
}
int main()
{
 постоянная строка ввода = 10;
 столбец const int = 10;
 сранд (время (0));
 std::array<std::array<int, строка>, столбец> матрица;
 для(int i=0;я
 для(int j=0;j
 матрица [i][j] = rand()%20 - 10;
 std::cout<;
        }
 std::cout<;
    }
 std::cout<<"Summ = "<;
 возврат 0;
}
*/

//задача 5 В квадратной матрице для каждой строки найти минимальный элемент и
//переставить его с элементом, стоящим в этой строке на главной диагонали.

/*
#включить<iostream>
#включить<массив>
#включить<time.h>
функция void(std::array<std::array<int, 4>, 4> матрица)
{
 значение int = 11;
 строка int = 4;
 столбец int = 4;
 int j = 0;
 int i = 0;
 int pos_i_min;
 пока (я
    {
 для(j=0;j
        {
 если(матрица[i][j]
            {
 значение = матрица[i][j];
 pos_i_min = j;
            }
        }
 матрица[i][pos_i_min] = матрица[i][i];
 матрица [i][i] = значение;
 я++;
 значение = 11;
    }
 для(int b =0;b
    {
 для(int a=0;a
        {
 std::cout<;
        }
 std::cout<;
    }
}
int main()
{
 постоянная строка ввода = 4;
 столбец const int = 4;
 сранд (время (0));
 std::array<std::array<int, строка>, столбец> матрица;
 для(int i=0;я
 для(int j=0;j
 матрица [i][j] = rand()%20 - 10;
 std::cout<;
        }
 std::cout<;
    }
 std::cout<
 <
 <;
 функция (матрица);
 возврат 0;
}
*/


//Задача 8 Дана матрица. Элементы первой строки — мощность электромотора, второй строки
//— категория мотора (число от 1 до 3). Найти самый мощный мотор категории 3.
/*
#включить<iostream>
#включить<массив>
#включить<time.h>
функция int(std::array<std::array<int, 7>, 2> матрица){
 int max_moshnost = -1;
 для(int i=0;i<7;i++)
    {
 если(матрица[1][i] == 3)
        {
 если(матрица[0][i]>max_moshnost)
            {
 max_moshnost = матрица[0][i];
            }
        }
    }
 вернуть max_moshnost;
}
int main()
{
 const int linn = 2;
 столбец const int = 7;
 сранд (время (0));
 std::array<std::array<int,column>,linn> матрица;
 для(int i=0;я
 матрица[0][i] = rand()%10;
 std::cout<;
        }
 std::cout<;
 для(int j=0;j
 матрица[1][j] = rand()%3 + 1;
 std::cout<;
        }
 std::cout<
 <
 <;
 std::cout<;
 возврат 0;
}
*/
//Задача 9b: Объявить, реализовать заполнение данными с клавиатуры ИЛИ из файла и вывести
//на экран матрицу, описывающую следующие сущности. Предложите свой вариант.
//Состояние робота на шахматной доске. Робот характеризуется уровнем заряда, скоростью движения.
/*
#включить<iostream>
#включить<массив>
#включить<time.h>
структурированный робот
{
 внутренняя сила;
 скорость ввода;
};
константные строки = 3;
const int columms = 3;
функция void(std::array<std::array<Робот, столбцы>, строки> dask)
{
 для(int i=0;я
    {
 для(int j=0;j
        {
 std::cout<;
        }
 std::cout<;
    }
}
int main()
{
 std::array<std::array<Робот, столбцы>, строки> dask;
 для(int i=0;я
    {
 для(int j=0;j
        {
 std::cout<<"Сила: ";
 std::cin>>dask[j][i].мощность;
 std::cout<<"Скорость: ";
 std::cin>>dask[j][i].скорость;
        }
    }
 std::cout<;
 функция (dask);
 возврат 0;
}
*/

//Задача 10(6)Реализовать вычисление матричных норм из списка выше (только для квадратных матриц).


#включить<iostream>
#включить<массив>
#включить<time.h>
#включить<cmath>

int const столбцы = 3;
int const строк = 3;

функция void(std::array<std::array<int,столбцы>, строки> матрица)
{
    int num_max;
 std::array<int,3> arr;

    для(int i=0; я
    {
 num_max = 0;

        для(int j=0;j
        {
            если(матрица[i][j]>num_max)
            {
 num_max = матрица[i][j];
            }
        }
 arr[i] = num_max;
    }

    для(int a=0;a<3;a++)
    {
 std::cout<<arr[a]<<" ";
    }

 std::cout<;
}

обычный int(std::array<std::array<int, столбцы>, строки> матрица)
{
 std::array<int,3> summ;
    int num_summ;
    int num_max = -1;
    для(int i=0; я
    {
 num_summ = 0;
        для(int j=0;j
        {
 num_summ += abs(матрица [j][i]);
        }
 сумма[i] = num_summ;
    }

    для(int a=0;a<3;a++)
    {
        если(summ[a]>num_max)
        {
 num_max = сумма[a];
        }
    }

    вернуть num_max;
}

основной int()
{
    старший(время(0));

Встроенная панель инструментов действий с файлами

    Копировать строки
          Копировать строки  
        {
 матрица [i][j] = rand()%5;
  Скопировать постоянную ссылку   
        }
Посмотреть git blame
    }
Ссылка в новом выпуске

    функция(матрица);
Перейти к строке

Перейти к строке…

    0 возврата;
}
